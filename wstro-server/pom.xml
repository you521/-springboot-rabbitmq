<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"> 
  <modelVersion>4.0.0</modelVersion>
  <!-- 模块基本信息 -->
  <artifactId>wstro-server</artifactId>
  <name>wstro-server</name>
  <packaging>war</packaging>
  <url>http://maven.apache.org</url>
  
  <!-- 依赖的父模块 -->
  <parent>
    <groupId>com.you.wstro</groupId>
    <artifactId>springboot-parent-manager</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  
  <dependencies>
        <!-- 内部引用 start -->
        <dependency>
            <groupId>com.you.wstro</groupId>
            <artifactId>wstro-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.you.wstro</groupId>
            <artifactId>wstro-entity</artifactId>
        </dependency>
        <dependency>
            <groupId>com.you.wstro</groupId>
            <artifactId>wstro-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.you.wstro</groupId>
            <artifactId>wstro-dao</artifactId>
        </dependency>
        <!-- 内部引用 end -->
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 将spring boot 打成war部署时需要引入的依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- spring test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- rabbitMQ -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <!-- aop -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- 消除 Java 的冗长 ,优雅的编程 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- spring boot 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖该项目的项目如果想要使用devtools，需要重新引入 -->
            <optional>true</optional>  
            <scope>true</scope>
        </dependency>
        <!-- apache 工具类 -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
    </dependencies>
  <build>
        <!-- 设置打包后的文件名称 -->
        <finalName>${project.name}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <!-- war的名称 -->
                    <warName>${project.name}</warName>
                </configuration>
            </plugin>
            <!-- 跳过测试代码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                   <!--默认关掉单元测试 -->
                   <skipTests>true</skipTests>    
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>