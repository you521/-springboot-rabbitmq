server:
  port: 8081
  servlet:
    context-path: /wstro-web
  # 设置请求头的数据大小
  max-http-header-size: 404857
  # tomcat配置
  tomcat:
    # 设置字符编码
    uri-encoding: UTF-8
    # 最大连接数
    max-connections: 5000
    # 最小线程数
    min-spare-threads: 50
    # 最大线程数
    max-threads: 800
    # 队列长度
    accept-count: 1000
    # 服务器连接建立超时时间
    connection-timeout: 10000
    # 请求参数长度
    max-http-form-post-size: 30MB
    
# mysql数据源配置
spring:
  datasource:
    # JDBC连接Mysql6以上com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 数据库地址
    url: jdbc:mysql://localhost:3306/test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false
    # 用户名
    username: root
    # 密码
    password: 123456
    # 数据库类型
    platform: mysql
    # 指定连接池类型
    type: com.alibaba.druid.pool.DruidDataSource
    # druid连接池配置
    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 最大连接池数量
      max-active: 20
      # 最小连接池数量
      min-idle: 5
      # 获取连接时最大的等待时间,单位是：毫秒
      max-wait: 60000
      # 是否缓存preparedStatement，也就是打开PSCache,官方建议:MySQL下关闭，如果用SQL防火墙 建议打开
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true,当关闭PSCache时，配置小于0
      max-pool-prepared-statement-per-connection-size: -1
      # 有两个含义：1) 配置检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明，单位：毫秒
      time-between-eviction-runs-millis: 6000
      # 连接保持空闲而不被销毁的最小时间（也就是一个连接在连接池中最小时间）,单位：毫秒
      min-evictable-idle-time-millis: 1800000
      # 建议配置为true，不影响性能，并且保证安全性。申请获取连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      # 获取连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 用来检测连接是否有效的sql,必须是一个查询语句,mysql中为 select 'x', oracle中为 select 1 from dual
      validation-query: select 'x'
      # 监控页面相关配置
      stat-view-servlet:
        # 允许开启监控页面
        enabled: true
        # 允许页面监控数据重置,当登录监控页面后页面上有一个重置按钮,reset-enable不管设置成true还是false,按钮不会消失
        # 当时设置成true时,点击重置按钮,页面数据会置空;当设置成false时,点击重置按钮,页面数据不会置空
        reset-enable: true
        # 监控面板路径
        url-pattern: /druid/*
        # 登录用户名
        login-username: admin
        # 登录密码
        login-password: admin
      # 配置Web过滤器
      web-stat-filter:
        # 是否开启web-stat-filter
        enabled: true
        # 配置过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # 是否开启session会话统计功能
        session-stat-enable: true
        # 支持最大session数
        session-stat-max-count: 1000
        # 配置profileEnable能够监控单个url调用的sql列表
        profile-enable: true
      # filter相关配置
      filter:
        stat:
          # 是否开启stat过滤
          enabled: true
          # 慢SQL记录的时间,单位：毫秒
          slow-sql-millis: 1000
          # 打开慢SQL记录
          log-slow-sql: true
          # 打开mergeSql功能
          merge-sql: true
        wall:
          # 是否开启wall过滤
          enabled: true
        slf4j:
          # 是否开启slf4j日志过滤
          enabled: true
  # rabbitmq配置
  rabbitmq:
    # 服务器ip
    host: 49.232.136.165
    # 端口号
    port: 5672
    # 用户名
    username: admin
    # 密码
    password: admin
    # 配置虚拟主机
    virtual-host: user-register
    # 连接超时，单位毫秒，0表示无穷大，不超时
    connection-timeout: 3000
    # 消息确认机制 --- 是否启用发布确认(默认false），从生产者-->交换器
    publisher-confirms: true
    # 消息确认机制 --- 是否启用发布返回（默认false），从交换器-->队列
    publisher-returns: true
    # 缓存设置
    cache:
      channel:
        # 缓存中保持的channel数量
        size: 200
        # 当缓存数量被设置时，从缓存中获取一个channel的超时时间，单位毫秒；如果为0，则总是创建一个新channel
        checkout-timeout: 1000
      connection:
        # 缓存的连接数，只有是CONNECTION模式时生效
        size: 5
        # 连接工厂缓存模式：CHANNEL 和 CONNECTION
        mode: CONNECTION
    template:
      # 消息确认机制 --- 启用强制信息；默认false
      #1.当mandatory标志位设置为true时，
      #   如果exchange根据自身类型和消息routingKey无法找到一个合适的queue存储消息，
      #   那么broker会调用basic.return方法将消息返还给生产者;
      #2.当mandatory设置为false时，出现上述情况broker会直接将消息丢弃;
      #   通俗的讲，mandatory标志告诉broker代理服务器至少将消息route到一个队列中，
      #   否则就将消息return给发送者;
      mandatory: true
      retry:
        # 启用发送重试
        enabled: true
        # 最大重试次数
        max-attempts: 3
    # 消费者配置
    listener:
      simple:
        # 消息确认机制 --- manual手动确认
        acknowledge-mode: manual    # 表示消息确认方式，其有三种配置方式，分别是none、manual和auto；默认auto
        # 最小消费者数量
        concurrency: 5
        # 最大消费者数量
        max-concurrency: 20
        # 消费者每次从队列获取的消息数量
        prefetch: 15
        retry:
          # 启用监听重试
          enabled: true
          # 最大重试次数
          max-attempts: 3
# 配置日志输出级别
logging:
  # 指定logback配置文件的位置 
  config: classpath:logback-spring.xml
  # 文件日志要输出的路径
  path: C:/logs/wstro-web
  # 日志的输出级别
  level:
    root: info